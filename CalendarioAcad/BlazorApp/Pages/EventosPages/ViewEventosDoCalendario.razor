@page "/Eventos/ViewEventosDoCalendario/{idCalendario:int}"
@using BlazorApp.Models
@using BlazorApp.Services
@inject EventoService Service
@inject CalendarioService CalendarioService
@inject NavigationManager Navigation

<h3 class="mb-3">Eventos do Calendário @calendario?.Ano</h3>

@if(eventos == null)
{
    <p><em>Carregando eventos...</em></p>
}
else if(!eventos.Any()){
    <p><em>Nenhum evento cadastrado para esse calendário</em></p>
}
else
{
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Descrição</th>
                <th>Data Inicial</th>
                <th>Data Final</th>
                <th>Uesc Funciona</th>
                <th>Tipo Feriado</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var evento in eventos)
            {
                <tr>
                    <td class="@GetDescricaoClasse(evento)">@evento.Descricao</td>
                    <td class="@GetDescricaoClasse(evento)">@evento.DataInicio</td>
                    <td class="@GetDescricaoClasse(evento)">@evento.DataFinal</td>
                    <td>@(evento.UescFunciona ? "✔" : "✘")</td>
                    <td>@EnumExtensions.ConverteEnum(evento.TipoFeriado)</td>
                    <td class="align-content-sm-center"><a href="/Eventos/EditarEvento/@evento.IdEvento">Editar Evento</a></td>
                </tr>
            }
        </tbody>
    </table> 
}

@code {
    [Parameter]
    public int idCalendario { get; set; }
    private List<Evento> eventos = new List<Evento>();
    private Calendario ? calendario;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            eventos = await Service.GetEventoPorCalendario(idCalendario);
            calendario = await CalendarioService.GetByIdAsync(idCalendario);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao carregar eventos: {ex.Message}");
        }
    }

    private string GetDescricaoClasse(Evento evento)
    {
        return evento.Importante ? "descricao-importante" : ""; 
    }
    
}
